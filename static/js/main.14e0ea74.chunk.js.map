{"version":3,"sources":["utils/useModal.jsx","selectors/intents.jsx","reducers/intents.jsx","utils/constants.jsx","components/IntentSelection/Header/Header.style.jsx","components/IntentSelection/Header/Header.jsx","utils/styleUtil.jsx","common/Tag/Tag.style.jsx","common/index.jsx","common/Tag/Tag.jsx","components/IntentSelection/IntentList/Intent/Intent.style.jsx","components/IntentSelection/IntentList/Intent/Intent.jsx","components/IntentSelection/IntentList/IntentList.jsx","components/IntentSelection/ConfirmationModal/ConfirmationModal.style.jsx","components/IntentSelection/ConfirmationModal/ConfirmationModal.jsx","components/IntentSelection/IntentSelection.style.jsx","components/IntentSelection/IntentSelection.jsx","App.jsx","reportWebVitals.js","reducers/store.jsx","index.jsx"],"names":["useModal","useState","isVisible","setVisibility","selectIntents","state","intents","selectIntentsList","createSelector","list","selectIntentsCount","length","selectSelectedIntentsList","filter","intent","selected","intentsSlice","createSlice","name","initialState","id","description","trainingData","expressionCount","expressions","text","reply","reducers","selectAllIntents","map","unselectAllIntents","clickIntent","action","intentIndex","findIndex","payload","actions","reducer","colors","accent","gray","headerStyle","position","zIndex","width","background","height","padding","verticalAlign","borderBottom","titleStyle","lineHeight","AntdHeader","Layout","Header","Title","Typography","showModal","dispatch","useDispatch","allSelected","useSelector","style","justify","level","size","shape","onClick","marginRight","type","getMargin","margin","marginBottom","tagStyle","borderRadius","Tag","value","getCardStyle","textAlign","border","Text","common","Intent","info","hoverable","strong","expression","IntentList","intentsList","RoundModal","styled","Modal","hide","title","visible","onOk","onCancel","okText","cancelText","okButtonProps","cancelButtonProps","layoutStyle","fontFamily","fontSize","contentStyle","marginTop","marginLeft","Content","IntentSelection","showConfirmationModal","hideConfirmationModal","isConfirmationModalVisible","ConfirmationModal","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.14e0ea74.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst useModal = () => {\r\n  const [isVisible, setVisibility] = useState(false);\r\n\r\n  const show = () => {\r\n    setVisibility(true);\r\n  };\r\n\r\n  const hide = () => {\r\n    setVisibility(false);\r\n  };\r\n  return [show, hide, isVisible];\r\n};\r\n\r\nexport default useModal;\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const selectIntents = (state) => state.intents;\r\n\r\nexport const selectIntentsList = createSelector(\r\n  [selectIntents],\r\n  (intents) => intents.list,\r\n);\r\n\r\nexport const selectIntentsCount = createSelector(\r\n  [selectIntents],\r\n  (intents) => intents.list.length,\r\n);\r\n\r\nexport const selectSelectedIntentsList = createSelector(\r\n  [selectIntents],\r\n  (intents) => intents.list.filter((intent) => intent.selected),\r\n);\r\n","/* eslint-disable no-param-reassign */\r\nimport { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const intentsSlice = createSlice({\r\n  name: 'intents',\r\n  initialState: {\r\n    list: [\r\n      {\r\n        id: '34d7831e137a4016a55f98926800a643',\r\n        name: 'Greeting',\r\n        description: 'The user says hello.',\r\n        trainingData: {\r\n          expressionCount: 170,\r\n          expressions: [\r\n            {\r\n              id: '6399fd6989984c7b871c6301744b0af5',\r\n              text: 'Hello',\r\n            },\r\n            {\r\n              id: '68bafebc2a2e4843a56a221c2ceb12ed',\r\n              text: 'Hi',\r\n            },\r\n            {\r\n              id: 'b2a3208dc801432992812638368e0668',\r\n              text: 'Good morning!',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: 'f35d7e0936a44102bac9cb96c81eec3b',\r\n          text: 'Hello :) How can I help you?',\r\n        },\r\n      },\r\n      {\r\n        id: 'b6ec3deac5f94500aef55d9c410e37f7',\r\n        name: 'Goodbye',\r\n        description: 'The user says goodbye.',\r\n        trainingData: {\r\n          expressionCount: 94,\r\n          expressions: [\r\n            {\r\n              id: '6bb364d2e3364e03b4ca30c6e46ea1dd',\r\n              text: 'Thanks, bye!',\r\n            },\r\n            {\r\n              id: '2bc38310a4d1450f9e7c9e7903e458b9',\r\n              text: 'Goodbye!',\r\n            },\r\n            {\r\n              id: '611c935266c1402ab76f5235827370f8',\r\n              text: 'See you',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '9ba88034a89e4fdbb532bdb092717fa1',\r\n          text: 'Goodbye, have a nice day!',\r\n        },\r\n      },\r\n      {\r\n        id: '61e218983f8b49f79405e8cf22992e61',\r\n        name: 'Affirmative',\r\n        description: 'The user confirms that something is true / correct.',\r\n        trainingData: {\r\n          expressionCount: 94,\r\n          expressions: [\r\n            {\r\n              id: '13039d5bff7b4e3c951c716826f3598d',\r\n              text: 'Yeah',\r\n            },\r\n            {\r\n              id: 'c677b5a2efe44bd8a92e2c35124a6ab1',\r\n              text: 'yep',\r\n            },\r\n            {\r\n              id: 'f990846d295a4b2289439efd8abedb7b',\r\n              text: 'yes, please',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '3c9029f14fd74a6aac3a571d403bab35',\r\n          text: 'Great!',\r\n        },\r\n      },\r\n      {\r\n        id: '5a13917dac654cfaa10619de37a673c4',\r\n        name: 'Negative',\r\n        description: \"The user confirms that they don't need help / something is not true or similar.\",\r\n        trainingData: {\r\n          expressionCount: 129,\r\n          expressions: [\r\n            {\r\n              id: '438303d11e3a4833973c7319cdf23275',\r\n              text: 'No thanks!',\r\n            },\r\n            {\r\n              id: '5db9342ebc644d6c824911323d23e568',\r\n              text: 'nope',\r\n            },\r\n            {\r\n              id: '060224b8c36347f79d11bb6a73a078f6',\r\n              text: \"please don't\",\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '133957c37f954d6a8c0b721fbc3b652a',\r\n          text: 'Alright, please let me know if I can help you with anything else!',\r\n        },\r\n      },\r\n      {\r\n        id: '629ebabd5d714900bbc7eb2c9eceb927',\r\n        name: 'Thanks',\r\n        description: 'The user says thank you.',\r\n        trainingData: {\r\n          expressionCount: 72,\r\n          expressions: [\r\n            {\r\n              id: '71dbc302036d4257bbb6c477e0e0a7fc',\r\n              text: 'Brilliant! Thanks!',\r\n            },\r\n            {\r\n              id: '0fa23ff354fb41b29da47ecd7fbbdaee',\r\n              text: 'thx',\r\n            },\r\n            {\r\n              id: '9d8a7691475e45c0b06304b34721ce38',\r\n              text: 'thank you',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '17134b01d2e343bc81e48fad4ec2ca00',\r\n          text: 'It was a pleasure to be of help :)',\r\n        },\r\n      },\r\n      {\r\n        id: 'f83a8f67dd8e4eef8c743a0f324aeca0',\r\n        name: 'Are you a bot?',\r\n        description: 'The user wants to know if they are talking to a bot or a human.',\r\n        trainingData: {\r\n          expressionCount: 83,\r\n          expressions: [\r\n            {\r\n              id: '7b943480157041ae971c019a4f60b0f4',\r\n              text: 'Are u human?',\r\n            },\r\n            {\r\n              id: '0b06b67653e749e9a23df1a504962f39',\r\n              text: 'Are you a bot?',\r\n            },\r\n            {\r\n              id: '037f9c3ef28540078527349c1c56e1d9',\r\n              text: 'Is this a robot?',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '7d169954803d4bb4a40588c53eda620c',\r\n          text: \"I'm an AI bot, and I'm here to help you with your questions.\",\r\n        },\r\n      },\r\n      {\r\n        id: 'f505432f6dcd40548983e4eab1675429',\r\n        name: 'Transfer to agent',\r\n        description: 'The user wants to speak to a human agent.',\r\n        trainingData: {\r\n          expressionCount: 59,\r\n          expressions: [\r\n            {\r\n              id: '78f4760adc1545229e32b0b453d20362',\r\n              text: 'Can I talk to a human?',\r\n            },\r\n            {\r\n              id: '71d413bc26cd4a85ac98f99198c324d0',\r\n              text: 'I want to speak to an agent.',\r\n            },\r\n            {\r\n              id: '27fa5c9224934952aa5dfe6f6a229ba5',\r\n              text: 'transfer to a human',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '6ad4f9d516c44eb8ad765f557ecc3ca6',\r\n          text: 'Let me transfer you to the first available agent.',\r\n        },\r\n      },\r\n      {\r\n        id: '0edf4a33873d482f857bfa0a5c16b7ce',\r\n        name: 'Login Problems',\r\n        description: 'The user has trouble logging in.',\r\n        trainingData: {\r\n          expressionCount: 101,\r\n          expressions: [\r\n            {\r\n              id: 'ec7e980908c84822b18e331e2496045a',\r\n              text: \"I can't sign in\",\r\n            },\r\n            {\r\n              id: 'f81537f3f69b4b729fe1c71f83e7e25e',\r\n              text: 'The login is giving me an error.',\r\n            },\r\n            {\r\n              id: 'd748c7a9bc124abc9fa3a3147fb11651',\r\n              text: \"Can you help me change my password, can't log in!\",\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '6dc10b2946cf4099a02c14d8416fcb02',\r\n          text: 'Oh no! Please give me your email and I will fix it.',\r\n        },\r\n      },\r\n      {\r\n        id: '29a0d3b7cecc4fe5955f6c5c30fbcf6b',\r\n        name: 'Open Account',\r\n        description: 'The user wants to create a new account.',\r\n        trainingData: {\r\n          expressionCount: 65,\r\n          expressions: [\r\n            {\r\n              id: '5216d8a096f44cf681b54cac19b8f29a',\r\n              text: 'Where do I open a new account?',\r\n            },\r\n            {\r\n              id: 'bd959fc688404f188bc23dd1abefc772',\r\n              text: 'how to start an account ',\r\n            },\r\n            {\r\n              id: 'a34e39f190f0491f8953a6a215261f2e',\r\n              text: 'i need help creating an account',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: 'd1bf934c18634586962758fb98ff44a1',\r\n          text: 'Please follow these instructions \"LINK\" to open a new account.',\r\n        },\r\n      },\r\n      {\r\n        id: '847042444ac24dea946a6e99c018e7e5',\r\n        name: 'Close Account',\r\n        description: 'The user wants to close their account.',\r\n        trainingData: {\r\n          expressionCount: 65,\r\n          expressions: [\r\n            {\r\n              id: '5a970b47424744339c75a19c2e5e8e49',\r\n              text: 'How do I cancel my account.',\r\n            },\r\n            {\r\n              id: '18189f0aad2545819e3bf8125af896f9',\r\n              text: 'Close my account.',\r\n            },\r\n            {\r\n              id: '3ba1dc0ffef8461582c05d3cc7451f07',\r\n              text: 'Can you delete my account and all my data',\r\n            },\r\n          ],\r\n        },\r\n        reply: {\r\n          id: '490ad9dd029045f8bea920b00be27cfc',\r\n          text: 'To close your account, please log in and go to \"LINK\"',\r\n        },\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    selectAllIntents: (state) => {\r\n      state.list = state.list.map((intent) => {\r\n        intent.selected = true;\r\n        return intent;\r\n      });\r\n    },\r\n    unselectAllIntents: (state) => {\r\n      state.list = state.list.map((intent) => {\r\n        intent.selected = false;\r\n        return intent;\r\n      });\r\n    },\r\n    clickIntent: (state, action) => {\r\n      const intentIndex = state.list.findIndex((intent) => intent.id === action.payload);\r\n\r\n      state.list[intentIndex].selected = !state.list[intentIndex].selected;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { actions, reducer } = intentsSlice;\r\n\r\nexport const { selectAllIntents, unselectAllIntents, clickIntent } = actions;\r\n\r\nexport default reducer;\r\n","export const colors = {\r\n  accent: '#7bb2f5',\r\n  gray: '#e4e4e4',\r\n};\r\n\r\nexport default { colors };\r\n","import { colors } from '../../../utils/constants';\r\n\r\nexport const headerStyle = {\r\n  position: 'fixed',\r\n  zIndex: 1,\r\n  width: '100%',\r\n  background: 'white',\r\n  height: 185,\r\n  padding: '100px 15% 0',\r\n  verticalAlign: 'center',\r\n  borderBottom: `1px solid ${colors.gray}`,\r\n};\r\n\r\nexport const titleStyle = {\r\n  lineHeight: 2,\r\n};\r\n\r\nexport default { headerStyle, titleStyle };\r\n","import React from 'react';\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport PropTypes from 'prop-types';\r\nimport {\r\n  Typography, Layout, Button, Row, Col,\r\n} from 'antd';\r\n\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { selectSelectedIntentsList, selectIntentsCount } from '../../../selectors/intents';\r\nimport { selectAllIntents, unselectAllIntents } from '../../../reducers/intents';\r\n\r\nimport { headerStyle, titleStyle } from './Header.style';\r\n\r\nconst { Header: AntdHeader } = Layout;\r\n\r\nconst { Title } = Typography;\r\n\r\nconst Header = ({ showModal }) => {\r\n  const dispatch = useDispatch();\r\n  const intentsCount = useSelector(selectIntentsCount);\r\n  const selectedIntentsList = useSelector(selectSelectedIntentsList);\r\n  const allSelected = intentsCount === selectedIntentsList.length;\r\n\r\n  const selectAll = () => {\r\n    if (allSelected) {\r\n      dispatch(unselectAllIntents());\r\n    } else {\r\n      dispatch(selectAllIntents());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AntdHeader style={headerStyle}>\r\n      <Row justify=\"space-between\">\r\n        <Col>\r\n          {/* TODO: Add a progress indicator of the bot creation process */}\r\n          <Title level={2} style={titleStyle}> Choose your reply templates </Title>\r\n        </Col>\r\n        <Col>\r\n          {/* TODO: Add a search bar */}\r\n          <Button size=\"large\" shape=\"round\" onClick={selectAll} style={{ marginRight: 10 }}>\r\n            {allSelected ? 'Unselect All' : 'Select All'}\r\n          </Button>\r\n          <Button type=\"primary\" size=\"large\" shape=\"round\" onClick={showModal}>Submit</Button>\r\n        </Col>\r\n      </Row>\r\n    </AntdHeader>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  showModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Header;\r\n","export const getMargin = (margin) => ({ marginBottom: margin });\r\n\r\nexport default { getMargin };\r\n","const tagStyle = {\r\n  borderRadius: 30,\r\n  padding: '5px 10px',\r\n  marginBottom: 8,\r\n};\r\n\r\nexport default tagStyle;\r\n","import Tag from './Tag';\r\n\r\nexport default { Tag };\r\n","import React from 'react';\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport PropTypes from 'prop-types';\r\nimport { Tag as AntTag } from 'antd';\r\n\r\nimport tagStyle from './Tag.style';\r\n\r\nconst Tag = ({ value }) => (\r\n  <AntTag\r\n    style={tagStyle}\r\n  >\r\n    {value}\r\n  </AntTag>\r\n);\r\n\r\nTag.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Tag;\r\n","import { colors } from '../../../../utils/constants';\r\n\r\nconst { accent, gray } = colors;\r\n\r\nexport const getCardStyle = (selected) => ({\r\n  width: 410,\r\n  margin: 20,\r\n  borderRadius: 20,\r\n  textAlign: 'left',\r\n  border: selected\r\n    ? `2px solid ${accent}`\r\n    : `1px solid ${gray}`,\r\n});\r\n\r\nexport default { getCardStyle };\r\n","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport PropTypes from 'prop-types';\r\nimport { Card, Typography, Row } from 'antd';\r\n\r\nimport { clickIntent } from '../../../../reducers/intents';\r\nimport { getMargin } from '../../../../utils/styleUtil';\r\nimport common from '../../../../common';\r\n\r\nimport { getCardStyle } from './Intent.style';\r\n\r\nconst { Title, Text } = Typography;\r\nconst { Tag } = common;\r\n\r\nconst Intent = ({ info }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <Card\r\n      onClick={() => {\r\n        dispatch(clickIntent(info.id));\r\n      }}\r\n      hoverable\r\n      style={getCardStyle(info.selected)}\r\n    >\r\n      <Title level={3} style={getMargin(0)}>{info.name}</Title>\r\n      <Row style={getMargin(20)}>{info.description}</Row>\r\n      <Row style={getMargin(5)}>\r\n        {/* TODO: Maybe add a see more examples icon */}\r\n        <Text strong>Examples: </Text>\r\n      </Row>\r\n      <Row style={getMargin(10)}>\r\n        {info.trainingData.expressions.map((expression) => (\r\n          <Tag key={expression.text} value={expression.text} />\r\n        ))}\r\n      </Row>\r\n      <Row style={getMargin(5)}>\r\n        <Text strong>Reply:</Text>\r\n      </Row>\r\n      <Row style={getMargin(10)}>\r\n        {info.reply.text}\r\n      </Row>\r\n    </Card>\r\n  );\r\n};\r\n\r\nIntent.propTypes = {\r\n  info: PropTypes.objectOf(PropTypes.oneOfType([\r\n    PropTypes.string,\r\n    PropTypes.object])).isRequired,\r\n};\r\n\r\nexport default Intent;\r\n","import React from 'react';\r\nimport { Row } from 'antd';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { selectIntentsList } from '../../../selectors/intents';\r\n\r\nimport Intent from './Intent';\r\n\r\nconst IntentList = () => {\r\n  const intentsList = useSelector(selectIntentsList);\r\n\r\n  return (\r\n    <Row justify=\"center\">\r\n      {intentsList.map((intent) => (\r\n        <Intent\r\n          key={intent.name}\r\n          info={intent}\r\n        />\r\n      ))}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default IntentList;\r\n","import { Modal } from 'antd';\r\nimport styled from '@emotion/styled';\r\n\r\nconst RoundModal = styled(Modal)`\r\n  .ant-modal-header {\r\n    border-radius: 30px;\r\n    border: none;\r\n  }\r\n\r\n  .ant-modal-footer {\r\n    border-radius: 30px;\r\n    border: none;\r\n  }\r\n\r\n  .ant-modal-content {\r\n    font-family: Montserrat, sans-serif;\r\n    border-radius: 30px;\r\n    padding: 10px;\r\n    margin-top: 15%;\r\n  }\r\n\r\n  .ant-modal-title {\r\n    font-weight: 600;\r\n    font-size: 24px;\r\n    margin-top: 3px;\r\n  }\r\n`;\r\n\r\nexport default RoundModal;\r\n","import React from 'react';\r\n/* eslint-disable import/no-extraneous-dependencies */\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport { Row } from 'antd';\r\nimport { selectSelectedIntentsList } from '../../../selectors/intents';\r\n\r\nimport common from '../../../common';\r\nimport { getMargin } from '../../../utils/styleUtil';\r\n\r\nimport RoundModal from './ConfirmationModal.style';\r\n\r\nconst { Tag } = common;\r\n\r\nconst IntentList = ({ hide, isVisible }) => {\r\n  const intents = useSelector(selectSelectedIntentsList);\r\n\r\n  return (\r\n    <RoundModal\r\n      title=\"Reply template list\"\r\n      visible={isVisible}\r\n      onOk={hide}\r\n      onCancel={hide}\r\n      okText=\"Confirm\"\r\n      cancelText=\"Cancel\"\r\n      okButtonProps={{ type: 'primary', shape: 'round' }}\r\n      cancelButtonProps={{ shape: 'round' }}\r\n    >\r\n      <Row style={getMargin(10)}>\r\n        {intents.length\r\n          ? 'You have selected the following reply templates:'\r\n          : 'You have not selected any reply template.'}\r\n      </Row>\r\n      <Row>\r\n        {/* TODO: Add an unselect intent badge onHover */}\r\n        {intents.map((intent) => (\r\n          <Tag key={intent.name} value={intent.name} />\r\n        ))}\r\n      </Row>\r\n    </RoundModal>\r\n  );\r\n};\r\n\r\nIntentList.propTypes = {\r\n  hide: PropTypes.func.isRequired,\r\n  isVisible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default IntentList;\r\n","export const layoutStyle = {\r\n  background: 'white',\r\n  textAlign: 'left',\r\n  fontFamily: 'Montserrat, sans-serif',\r\n  fontSize: 14,\r\n};\r\n\r\nexport const contentStyle = {\r\n  marginTop: 200,\r\n  background: 'white',\r\n  marginLeft: '10%',\r\n  marginRight: '10%',\r\n};\r\n\r\nexport default { layoutStyle, contentStyle };\r\n","import React from 'react';\r\nimport { Layout } from 'antd';\r\n\r\nimport useModal from '../../utils/useModal';\r\n\r\nimport Header from './Header';\r\nimport IntentList from './IntentList';\r\nimport ConfirmationModal from './ConfirmationModal';\r\n\r\nimport { layoutStyle, contentStyle } from './IntentSelection.style';\r\n\r\nconst { Content } = Layout;\r\n\r\nconst IntentSelection = () => {\r\n  const [showConfirmationModal, hideConfirmationModal, isConfirmationModalVisible] = useModal();\r\n\r\n  return (\r\n    <Layout style={layoutStyle}>\r\n      <Header showModal={showConfirmationModal} />\r\n      <Content style={contentStyle}>\r\n        <IntentList />\r\n        <ConfirmationModal\r\n          hide={hideConfirmationModal}\r\n          isVisible={isConfirmationModalVisible}\r\n        />\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default IntentSelection;\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './App.css';\r\n\r\nimport IntentList from './components/IntentSelection';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <IntentList />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/* eslint-disable linebreak-style */\r\nconst reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({\r\n      getCLS, getFID, getFCP, getLCP, getTTFB,\r\n    }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\n\r\nimport intents from './intents';\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    intents,\r\n  },\r\n});\r\n","/* eslint-disable linebreak-style */\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nimport store from './reducers/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}